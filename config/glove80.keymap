/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2025 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

#define HYPER LC(LS(LG(LALT)))
#define MEH LC(LALT(LCTRL))
#define SUPER LG(LALT(LCTRL))

#define QUICK_TAP_MS 175

// Key position definitions for home row mods
#define KEYS_L 4 3 2 1 0 14 13 12 11 10 26 25 24 23 22 38 37 36 35 34 50 49 48 47 46  // Left-hand keys by number
#define KEYS_R 5 6 7 8 9 17 18 19 20 21 29 30 31 32 33 41 42 43 44 45 59 60 61 62 63  // Right-hand keys by number  
#define THUMBS 71 70 69 72 73 74                                                      // Thumb keys by number (LH0 LH1 LH2 RH0 RH1 RH2)

#define BASE 0
#define DEV 1
#define NPAD 2
#define MAGIC 3
#define MOUSE 4

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
    behaviors {
        bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
        };
        bt_1: bt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_1>, <&bt BT_DISC 1>;
        };
        bt_2: bt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_2>, <&bt BT_DISC 2>;
        };
        bt_3: bt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_3>, <&bt BT_DISC 3>;
        };

        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_HRM";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            bindings = <&kp>, <&kp>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_HRM";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            bindings = <&kp>, <&kp>;
        };

        ltl: layer_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            bindings = <&mo>, <&kp>;
        };

        ltr: layer_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            bindings = <&mo>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        BASE {
            bindings = <
   &kp F1          &kp F2           &kp F3           &kp F4           &kp F5                                                                                                                                  &kp F6          &kp F7          &kp F8           &kp F9           &kp F10
   &kp EQUAL       &kp N1           &kp N2           &kp N3           &kp N4           &kp N5                                                                                                 &kp N6          &kp N7          &kp N8          &kp N9           &kp N0           &kp MINUS
   &kp TAB         &kp Q            &ltl MOUSE W     &kp E            &kp R            &kp T                                                                                                  &kp Y           &kp U           &kp I           &kp O            &kp P            &kp BSLH
   &kp ESC         &kp A            &hml LGUI S      &hml LALT D      &hml LCTRL F     &ltl NPAD G                                                                                            &ltr NPAD H     &hmr RCTRL J    &hmr RALT K     &hmr RGUI L      &kp SEMI         &kp SQT
   &kp GRAVE       &kp Z            &kp X            &kp C            &kp V            &kp B            &kp DEL   &kp LGUI   &kp ESC        &kp LCTRL  &kp RGUI               &kp RET         &kp N           &kp M           &kp COMMA       &kp DOT          &kp FSLH         &kp PG_UP
   &magic MAGIC 0  &lt 2 HOME       &kp END          &kp LEFT         &kp RIGHT                         &kp BSPC  &kp LSHFT  &ltl DEV LALT  &kp RET    &hmr RSHFT &caps_word  &kp SPACE                       &kp UP          &kp DOWN        &kp LBKT         &kp RBKT         &kp PG_DN
            >;
        };
        DEV {
            bindings = <
   &trans          &trans           &trans           &trans           &trans                                                                                                                                  &trans          &trans          &trans           &trans           &trans
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &trans          &trans          &trans          &trans           &trans           &trans
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &kp CARET       &kp GRAVE       &kp STAR        &kp PLUS         &kp EQUAL        &trans
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &kp PIPE        &kp MINUS       &kp LPAR        &kp RPAR         &kp UNDERSCORE   &kp MINUS
   &trans          &trans           &trans           &trans           &trans           &trans           &trans    &trans     &trans         &trans     &trans                 &trans          &kp PERCENT     &kp DOLLAR      &kp LBKT        &kp RBKT         &kp AMPERSAND    &trans
   &trans          &trans           &trans           &trans           &trans                            &trans    &trans     &trans         &trans     &trans                 &trans                          &trans          &trans          &trans           &trans           &trans
            >;
        };
        NPAD {
            bindings = <
   &kp C_BRI_DN    &kp C_BRI_UP     &kp C_PREV       &kp C_NEXT       &kp C_PP                                                                                                                                &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP     &none            &kp PAUSE_BREAK
   &trans          &none            &none            &none            &none            &kp HOME                                                                                               &kp LPAR        &kp KP_NUM      &kp KP_EQUAL    &kp KP_SLASH     &kp KP_MULTIPLY  &kp PRINTSCREEN
   &trans          &none            &none            &kp UP_ARROW     &none            &kp END                                                                                                &kp RPAR        &kp KP_N7       &kp KP_N8       &kp KP_N9        &kp KP_MINUS     &kp SCROLLLOCK
   &trans          &none            &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp PG_UP                                                                                              &kp PERCENT     &kp KP_N4       &kp KP_N5       &kp KP_N6        &kp KP_PLUS      &none
   &trans          &kp K_APP        &none            &kp F11          &kp F12          &kp PG_DN        &trans    &trans     &to 0          &trans     &trans                 &trans          &kp COMMA       &kp KP_N1       &kp KP_N2       &kp KP_N3        &kp KP_ENTER     &trans
   &magic MAGIC 0  &kp CAPS         &kp INS          &kp F11          &kp F12                           &trans    &trans     &trans         &trans     &trans                 &trans                          &kp KP_N0       &kp KP_N0       &kp KP_DOT       &kp KP_ENTER     &trans
            >;
        };
        MAGIC {
            bindings = <
   &bt BT_CLR      &none            &none            &none            &none                                                                                                                                   &none           &none           &none            &none            &bt BT_CLR_ALL
   &none           &none            &none            &none            &none            &none                                                                                                  &none           &none           &none           &none            &none            &none
   &none           &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                                                        &none           &none           &none           &none            &none            &none
   &bootloader     &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                                                        &none           &none           &none           &none            &none            &bootloader
   &sys_reset      &none            &none            &none            &none            &none            &bt_2     &bt_3      &none          &none      &none                  &none           &none           &none           &none           &none            &none            &sys_reset
   &none           &none            &none            &none            &none                             &bt_0     &bt_1      &out OUT_USB   &none      &none                  &none                           &none           &none           &none            &none            &none
            >;
        };
        MOUSE {
            bindings = <
   &trans          &trans           &trans           &trans           &trans                                                                                                                                  &trans          &trans          &trans           &trans           &trans
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &trans          &trans          &trans          &trans           &trans           &trans
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &none           &kp PG_UP       &mmv MOVE_UP    &kp PG_DN        &none            &none
   &trans          &trans           &trans           &trans           &trans           &trans                                                                                                 &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB4         &mkp MB5
   &trans          &trans           &trans           &trans           &trans           &trans           &trans    &trans     &trans         &trans     &trans                 &trans          &none           &mkp LCLK       &mkp MCLK       &mkp RCLK        &none            &none
   &trans          &trans           &trans           &trans           &trans                            &trans    &trans     &to 0          &trans     &msc SCRL_UP           &msc SCRL_DOWN                  &trans          &trans          &trans           &trans           &trans
            >;
        };
    };
};
